{"ast":null,"code":"var _jsxFileName = \"/home/qasim/Documents/ProcomManagementSystem/src/companies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Companies = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [companyName, setCompanyName] = useState('');\n  const [companyEmail, setCompanyEmail] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/companies', {\n        name: companyName,\n        email: companyEmail\n      });\n      setCompanies([...companies, response.data]);\n      setCompanyName('');\n      setCompanyEmail('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/companies');\n        setCompanies(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Companies Coming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: companies.map(company => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [company.name, \" (\", company.email, \")\"]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: companyName,\n          onChange: event => setCompanyName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: companyEmail,\n          onChange: event => setCompanyEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Companies, \"JbBWoIf9lLtM6ZCO+Zy9m0F0Whc=\");\n_c = Companies;\nexport default Companies;\nvar _c;\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Companies","_s","companies","setCompanies","companyName","setCompanyName","companyEmail","setCompanyEmail","handleSubmit","event","preventDefault","response","post","name","email","data","error","console","fetchData","get","children","fileName","_jsxFileName","lineNumber","columnNumber","map","company","id","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/qasim/Documents/ProcomManagementSystem/src/companies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Companies = () => {\n  const [companies, setCompanies] = useState([]);\n  const [companyName, setCompanyName] = useState('');\n  const [companyEmail, setCompanyEmail] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post('/api/companies', { name: companyName, email: companyEmail });\n      setCompanies([...companies, response.data]);\n      setCompanyName('');\n      setCompanyEmail('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/companies');\n        setCompanies(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>List of Companies Coming</h1>\n      <ul>\n        {companies.map((company) => (\n          <li key={company.id}>\n            {company.name} ({company.email})\n          </li>\n        ))}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={companyName} onChange={(event) => setCompanyName(event.target.value)} />\n        </label>\n        <label>\n          Email:\n          <input type=\"email\" value={companyEmail} onChange={(event) => setCompanyEmail(event.target.value)} />\n        </label>\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Companies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}